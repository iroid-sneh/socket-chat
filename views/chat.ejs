<!DOCTYPE html>
<html dir="ltr" lang="en">
    <head>
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <meta name="description" content="" />
        <meta name="author" content="" />
        <link rel="icon" type="image/png" sizes="16x16" href="/assets/images/favicon.png" />
        <title>Chat</title>
        <link href="/dist/css/style.min.css" rel="stylesheet" />
        <style>
            .chat-img img {
                object-fit: cover;
            }

            .chat-box {
                height: calc(100vh - 111px);
                overflow-y: auto;
            }

            .user-hover:hover {
                background-color: #f0f0f0;
                cursor: pointer;
            }

            .user-item img {
                object-fit: cover;
            }

            .chat-content img,
            .chat-content video,
            .chat-content iframe {
                border: 1px solid #ddd;
                padding: 5px;
                background: white;
            }
            .rounded {
                border-radius: 18px !important;
            }
            .modal {
                display: none;
                position: fixed;
                z-index: 9999;
                padding-top: 60px;
                left: 0;
                top: 0;
                width: 100%;
                height: 100%;
                overflow: auto;
                background-color: rgba(0, 0, 0, 0.8);
            }

            .modal-content {
                display: block;
                margin: auto;
                max-width: 90vw;
                max-height: 80vh;
                width: auto;
                height: auto;
                object-fit: contain;
                border-radius: 10px;
                box-shadow: 0 0 15px rgba(255, 255, 255, 0.5);
            }

            .close {
                position: absolute;
                top: 20px;
                right: 35px;
                color: #fff;
                font-size: 40px;
                font-weight: bold;
                cursor: pointer;
            }
        </style>
    </head>

    <body>
        <input type="hidden" id="currentUserId" value="<%= senderId %>" />
        <input type="hidden" id="recipientUserId" value="<%= recipientId %>" />
        <input type="hidden" id="isGroup" value="<%= isGroup %>" />

        <div
            id="main-wrapper"
            data-theme="light"
            data-layout="vertical"
            data-navbarbg="skin6"
            data-sidebartype="full"
            data-sidebar-position="fixed"
            data-header-position="fixed"
            data-boxed-layout="full"
        >
            <div class="page-wrapper pt-0 mx-auto">
                <div class="container-fluid">
                    <!-- Mobile Toggle Button (Visible only on small screens) -->
                    <button class="btn btn-primary d-lg-none mb-3" id="toggleSidebar">
                        <i class="fas fa-users"></i>
                        Toggle Contacts
                    </button>

                    <div class="row">
                        <!-- Sidebar Column - Hidden on mobile by default -->
                        <div
                            class="col-lg-3 col-xl-3 border-end d-none d-lg-block"
                            id="sidebarColumn"
                        >
                            <div class="card mb-0">
                                <div
                                    class="card-body border-bottom d-flex align-items-center gap-2"
                                >
                                    <form class="w-100">
                                        <input
                                            class="form-control rounded-pill"
                                            type="text"
                                            placeholder="Search Contact"
                                        />
                                    </form>
                                    <button
                                        class="btn btn-primary rounded-circle d-flex align-items-center justify-content-center"
                                        data-bs-toggle="modal"
                                        data-bs-target="#createGroupModal"
                                        style="width: 40px; height: 40px"
                                        title="Create Group"
                                    >
                                        <i class="fas fa-users"></i>
                                    </button>
                                </div>
                                <div
                                    class="scrollable position-relative"
                                    style="height: calc(100vh - 111px)"
                                >
                                    <ul class="mailbox list-style-none">
                                        <li>
                                            <div class="message-center">
                                                <div id="user-list">
                                                    <% users.forEach(user => { %>
                                                    <div
                                                        class="user-card"
                                                        data-name="<%= user.name.toLowerCase() %>"
                                                    >
                                                        <a
                                                            href="/api/v1/chat/<%= user._id %>"
                                                            style="
                                                                text-decoration: none;
                                                                color: inherit;
                                                            "
                                                        >
                                                            <div
                                                                class="user d-flex align-items-center gap-2 p-2"
                                                            >
                                                                <img
                                                                    src="/<%= user.image %>"
                                                                    alt="User Avatar"
                                                                    class="rounded-circle"
                                                                    width="40"
                                                                    height="40"
                                                                />
                                                                <div class="user-info">
                                                                    <h6
                                                                        class="user-name mb-0 fw-semibold"
                                                                    >
                                                                        <%= user.name %>
                                                                    </h6>
                                                                    <small class="text-muted">
                                                                        <%= 'Tap to chat' %>
                                                                    </small>
                                                                </div>
                                                            </div>
                                                        </a>
                                                    </div>
                                                    <% }) %> <% if (sideGroup && sideGroup.length >
                                                    0) { %> <% sideGroup.forEach((group, index) => {
                                                    %>
                                                    <div
                                                        class="user-card"
                                                        data-name="<%= group.name.toLowerCase() %>"
                                                        data-index="g<%= index %>"
                                                    >
                                                        <a
                                                            href="/api/v1/chat/group/<%= group._id %>"
                                                            style="
                                                                text-decoration: none;
                                                                color: inherit;
                                                            "
                                                        >
                                                            <div
                                                                class="user d-flex align-items-center gap-2 p-2"
                                                            >
                                                                <img
                                                                    src="/assets/images/background/group-img.jpg"
                                                                    alt="Group Icon"
                                                                    class="rounded-circle"
                                                                    width="40"
                                                                    height="40"
                                                                />
                                                                <div class="user-info">
                                                                    <h6
                                                                        class="user-name mb-0 fw-semibold"
                                                                    >
                                                                        <%= group.name %>
                                                                    </h6>
                                                                    <small class="text-muted">
                                                                        Group Chat
                                                                    </small>
                                                                </div>
                                                            </div>
                                                        </a>
                                                    </div>
                                                    <% }) %> <% } %>
                                                </div>
                                            </div>
                                        </li>
                                    </ul>
                                </div>
                            </div>
                        </div>

                        <!-- Chat Area Column - Full width on mobile -->
                        <div class="col-lg-8 col-xl-9" id="chatColumn">
                            <div class="card mb-0">
                                <div
                                    class="chat-box scrollable position-relative"
                                    style="height: calc(100vh - 111px)"
                                >
                                    <ul class="chat-list list-style-none px-3 pt-3" id="chat-list">
                                        <div
                                            class="d-flex align-items-center px-3 py-2 border-bottom position-sticky"
                                            style="top: 0; background: white; z-index: 50"
                                        >
                                            <% if (recipientId == groups._id) { %>
                                            <img
                                                src="/assets/images/background/group-img.jpg"
                                                alt="Group Icon"
                                                class="rounded-circle"
                                                width="40"
                                                height="40"
                                            />
                                            <% } else { %>
                                            <img
                                                src="/<%= recipientImage %>"
                                                alt="user"
                                                class="rounded-circle me-2"
                                                width="40"
                                                height="40"
                                            />
                                            <% } %>
                                            <h5 id="chatHeader" class="mb-0 fw-bold">
                                                <%= recipientName %>
                                                <span
                                                    id="onlineStatusDot"
                                                    style="
                                                        width: 10px;
                                                        height: 10px;
                                                        border-radius: 50%;
                                                        margin-left: 8px;
                                                        background-color: silver;
                                                        display: inline-block;
                                                    "
                                                ></span>
                                            </h5>
                                        </div>

                                        <div
                                            id="typing-status"
                                            style="margin-left: 10px; color: gray; display: none"
                                        ></div>
                                    </ul>
                                </div>

                                <div class="card-body border-top">
                                    <div
                                        id="selectedFileName"
                                        class="text-muted mb-1"
                                        style="font-size: 14px"
                                    ></div>
                                    <div class="row align-items-center">
                                        <div class="col-8 col-sm-9">
                                            <div class="input-field mt-0 mb-0">
                                                <input
                                                    id="textarea1"
                                                    placeholder="Type and enter"
                                                    class="form-control border-0"
                                                    type="text"
                                                />
                                            </div>
                                        </div>
                                        <div
                                            class="col-4 col-sm-3 d-flex gap-2 justify-content-end"
                                        >
                                            <label
                                                for="fileInput"
                                                class="btn-circle bg-cyan text-white d-flex align-items-center justify-content-center"
                                                id="fileBtn"
                                                style="
                                                    cursor: pointer;
                                                    width: 40px;
                                                    height: 40px;
                                                    flex-shrink: 0;
                                                "
                                            >
                                                <i class="fas fa-link"></i>
                                            </label>
                                            <a
                                                class="btn-circle bg-cyan text-white d-flex align-items-center justify-content-center"
                                                id="sendBtn"
                                                style="width: 40px; height: 40px; flex-shrink: 0"
                                                href="#"
                                            >
                                                <i class="fas fa-paper-plane"></i>
                                            </a>
                                            <input
                                                type="file"
                                                id="fileInput"
                                                style="display: none"
                                            />
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Create Group Modal -->
        <div
            class="modal fade"
            id="createGroupModal"
            tabindex="-1"
            aria-labelledby="createGroupModalLabel"
            aria-hidden="true"
        >
            <div class="modal-dialog modal-dialog-centered modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title fw-bold" id="createGroupModalLabel">
                            Create New Group
                        </h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                    </div>
                    <div class="modal-body">
                        <form id="createGroupForm">
                            <div class="mb-3">
                                <label for="groupName" class="form-label">Group Name</label>
                                <input
                                    type="text"
                                    class="form-control"
                                    id="groupName"
                                    placeholder="Enter group name"
                                    required
                                />
                            </div>
                            <div class="mb-3">
                                <label class="form-label">Select Members</label>
                                <div
                                    id="groupUserList"
                                    class="d-flex flex-column gap-2"
                                    style="max-height: 250px; overflow-y: auto"
                                >
                                    <% usersForGroup.forEach(user => { %>
                                    <div
                                        class="user d-flex align-items-center px-2 py-1 rounded border"
                                        style="cursor: pointer"
                                        onclick="toggleUserSelection('<%= user._id %>')"
                                    >
                                        <input
                                            type="checkbox"
                                            name="groupMembers"
                                            value="<%= user._id %>"
                                            id="user_<%= user._id %>"
                                            class="form-check-input me-2 d-none"
                                        />
                                        <img
                                            src="/<%= user.image %>"
                                            class="rounded-circle me-2"
                                            width="40"
                                            height="40"
                                        />
                                        <span><%= user.name %></span>
                                    </div>
                                    <% }); %>
                                </div>
                            </div>
                            <div class="text-end">
                                <button type="submit" class="btn btn-success">Create Group</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>

        <div id="imgModal" class="modal" onclick="this.style.display='none'">
            <span class="close">&times;</span>
            <img class="modal-content" id="modalImage" />
        </div>

        <script src="/socket.io/socket.io.js"></script>
        <script src="/assets/libs/jquery/dist/jquery.min.js"></script>
        <script src="/assets/libs/popper.js/dist/umd/popper.min.js"></script>
        <script src="/assets/libs/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
        <script src="/dist/js/app-style-switcher.js"></script>
        <script src="/dist/js/feather.min.js"></script>
        <script src="/assets/libs/perfect-scrollbar/dist/perfect-scrollbar.jquery.min.js"></script>
        <script src="/dist/js/sidebarmenu.js"></script>
        <script src="/dist/js/custom.min.js"></script>
        <script>
            const socket = io();

            const senderId = document.getElementById("currentUserId").value;
            const recipientId = document.getElementById("recipientUserId").value;
            let activeChatId = recipientId;
            const chatInput = document.getElementById("textarea1");
            const chatBox = document.querySelector(".chat-box");
            const isGroupChat = document.getElementById("isGroup")?.value === "true";
            const fileInput = document.getElementById("fileInput");
            const selectedFileName = document.getElementById("selectedFileName");
            const sendBtn = document.getElementById("sendBtn");
            const sidebar = document.getElementById("sidebarColumn");

            // Join current user to socket
            socket.emit("join", { userId: senderId });

            // Load previous messages on page load
            loadPreviousMessages();

            async function loadPreviousMessages() {
                const url = isGroupChat
                    ? `/api/v1/chat/group/messages/${recipientId}`
                    : `/api/v1/chat/messages/${recipientId}`;

                try {
                    const res = await fetch(url);
                    const data = await res.json();
                    console.log("Fetched messages:", data);

                    if (data.success && Array.isArray(data.messages)) {
                        data.messages.forEach((msg) => renderMessage(msg));
                        chatBox.scrollTop = chatBox.scrollHeight;
                    }
                } catch (err) {
                    console.error("Failed to load previous messages:", err);
                }
            }

            function renderMessage(msg) {
                const isSelf = msg.senderId === senderId;
                const alignment = isSelf ? "odd text-end" : "";
                const bgClass = isSelf ? "bg-primary text-white" : "bg-light";

                let content;
                if (msg.message?.match(/\.(jpg|jpeg|png|gif)$/i)) {
                    content = `<img src="${msg.message}" style="max-width:200px; max-height:200px; cursor: zoom-in;" onclick="openModal(this.src)">`;
                } else if (msg.isVideo || msg.message?.match(/\.(mp4|webm|ogg)$/i)) {
                    content = `<video controls src="${msg.message}" width="250" style="max-height: 200px;"></video>`;
                } else if (msg.isAudio || msg.message?.match(/\.(mp3|wav|ogg)$/i)) {
                    content = `<audio controls src="${msg.message}" style="width: 250px;"></audio>`;
                } else if (msg.message?.startsWith("/media/")) {
                    content = `<a href="${
                        msg.message
                    }" download style="color: black">📎 ${msg.message.split("/").pop()}</a>`;
                } else {
                    content = msg.message;
                }

                const nameTag =
                    isGroupChat && !isSelf && msg.senderName
                        ? `<div class="fw-semibold mb-1">${msg.senderName}</div>`
                        : "";

                const chatItem = `
            <li class="chat-item ${alignment} list-style-none mt-3">
                <div class="chat-content d-inline-block ps-3">
                    ${nameTag}
                    <div class="box msg p-2 d-inline-block mb-1 ${bgClass} rounded">
                        ${content}
                    </div>
                </div>
                <div class="chat-time d-block font-10 mt-1 mr-0 mb-2">
                    ${new Date(msg.createdAt).toLocaleTimeString([], {
                        hour: "2-digit",
                        minute: "2-digit",
                    })}
                </div>
            </li>`;
                document.getElementById("chat-list").insertAdjacentHTML("beforeend", chatItem);
            }

            // Toggle sidebar for mobile
            const toggleBtn = document.getElementById("toggleSidebar");
            toggleBtn?.addEventListener("click", () => {
                sidebar.classList.toggle("d-none");
            });

            const isMobile = () => window.innerWidth < 992;

            document.querySelectorAll(".user-card a").forEach((link) => {
                link.addEventListener("click", () => {
                    if (isMobile()) sidebar.classList.add("d-none");
                });
            });

            $("#textarea1").keypress(function (e) {
                if (e.keyCode === 13 && !e.shiftKey) {
                    e.preventDefault();
                    const msg = $(this).val().trim();
                    if (msg !== "") {
                        socket.emit("message", {
                            sender: senderId,
                            recipient: recipientId,
                            message: msg,
                            isGroup: isGroupChat,
                        });
                        $(this).val("");
                        socket.emit("stopTyping", { sender: senderId, recipient: recipientId });
                        isTyping = false;
                    }
                }
            });

            socket.on("message", (msg) => {
                const isGroup = isGroupChat;
                const isForCurrentChat = isGroup
                    ? msg.groupId === activeChatId
                    : (msg.senderId === senderId && msg.receiverId === activeChatId) ||
                      (msg.senderId === activeChatId && msg.receiverId === senderId);

                if (isForCurrentChat) {
                    renderMessage(msg);
                    chatBox.scrollTop = chatBox.scrollHeight;
                } else {
                    console.log(
                        "Ignored message from",
                        msg.senderId,
                        "because activeChatId is",
                        activeChatId
                    );
                }
            });

            function setRecipient(id, name) {
                document.getElementById("recipientUserId").value = id;
                activeChatId = id;
                $("#chat-list").html("");
                loadPreviousMessages();
            }

            socket.on("onlineUsers", (onlineUserIds) => {
                const dot = document.getElementById("onlineStatusDot");
                dot.style.backgroundColor = onlineUserIds.includes(recipientId)
                    ? "limegreen"
                    : "gray";
            });

            const typingStatus = document.getElementById("typing-status");
            let typingTimeout;
            let isTyping = false;

            chatInput.addEventListener("input", () => {
                if (!isTyping) {
                    socket.emit("typing", { sender: senderId, recipient: recipientId });
                    isTyping = true;
                }

                clearTimeout(typingTimeout);
                typingTimeout = setTimeout(() => {
                    socket.emit("stopTyping", { sender: senderId, recipient: recipientId });
                    isTyping = false;
                }, 2000);
            });

            socket.on("typing", ({ sender }) => {
                if (sender === activeChatId && !document.getElementById("typing-indicator")) {
                    const typingBubble = document.createElement("li");
                    typingBubble.id = "typing-indicator";
                    typingBubble.className = "chat-item list-style-none mt-3";
                    typingBubble.innerHTML = `
                <div class="chat-content d-inline-block ps-3">
                    <div class="box msg p-2 d-inline-block mb-1 bg-light rounded">
                        <i>Typing...</i>
                    </div>
                </div>`;
                    document.getElementById("chat-list").appendChild(typingBubble);
                    chatBox.scrollTop = chatBox.scrollHeight;
                }
            });

            socket.on("stopTyping", ({ sender }) => {
                if (sender === activeChatId) {
                    const typingBubble = document.getElementById("typing-indicator");
                    if (typingBubble) typingBubble.remove();
                }
            });

            fileInput.addEventListener("change", async (e) => {
                const file = e.target.files[0];
                if (!file) return;

                const arrayBuffer = await file.arrayBuffer();
                const fileBuffer = new Uint8Array(arrayBuffer);

                socket.emit("file", {
                    sender: senderId,
                    recipient: recipientId,
                    fileName: file.name,
                    fileBuffer: [...fileBuffer],
                });

                e.target.value = "";
                selectedFileName.textContent = "";
                selectedFileName.style.display = "none";
            });

            function toggleUserSelection(userId) {
                const checkbox = document.getElementById("user_" + userId);
                checkbox.checked = !checkbox.checked;
                checkbox.closest(".user").classList.toggle("bg-success-subtle", checkbox.checked);
            }

            document
                .getElementById("createGroupForm")
                ?.addEventListener("submit", async function (e) {
                    e.preventDefault();

                    const name = document.getElementById("groupName").value.trim();
                    const checkboxes = document.querySelectorAll(
                        "input[name='groupMembers']:checked"
                    );
                    const members = Array.from(checkboxes).map((cb) => cb.value);
                    const senderId = document.getElementById("currentUserId")?.value;

                    if (!name || members.length === 0) {
                        alert("Please enter a group name and select at least one member.");
                        return;
                    }

                    if (senderId) members.push(senderId);

                    try {
                        const res = await fetch("/api/v1/chat/group", {
                            method: "POST",
                            headers: { "Content-Type": "application/json" },
                            body: JSON.stringify({ name, members }),
                        });

                        const data = await res.json();
                        if (data.success) {
                            window.location.href = `/api/v1/chat/group/${data.groupId}`;
                        } else {
                            alert(data.message || "Failed to create group.");
                        }
                    } catch (err) {
                        console.error("Group creation failed:", err);
                        alert("An error occurred.");
                    }
                });

            const groupId = "<%= groups && groups._id %>";
            const currentChatId = "<%= recipientId %>";

            document.getElementById("chatHeader")?.addEventListener("click", () => {
                if (groupId && currentChatId === groupId) {
                    const groupModal = new bootstrap.Modal(
                        document.getElementById("dark-header-modal")
                    );
                    groupModal.show();
                }
            });

            function openModal(src) {
                const modal = document.getElementById("imgModal");
                const modalImg = document.getElementById("modalImage");
                modal.style.display = "block";
                modalImg.src = src;
            }
        </script>
    </body>
</html>
